<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:x="urn:schemas-microsoft-com:office:excel"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Excel.Sheet>
<meta name=Generator content="Microsoft Excel 12">
<link rel=File-List href="variables_files/filelist.xml">
<style id="ParserDataElementDictionary_32219_Styles"><!--table
	{mso-displayed-decimal-separator:"\.";
	mso-displayed-thousand-separator:"\,";}
.xl1532219
	{padding-top:1px;
	padding-right:1px;
	padding-left:1px;
	mso-ignore:padding;
	color:black;
	font-size:11.0pt;
	font-weight:400;
	font-style:normal;
	text-decoration:none;
	font-family:Calibri, sans-serif;
	mso-font-charset:0;
	mso-number-format:General;
	text-align:general;
	vertical-align:bottom;
	mso-background-source:auto;
	mso-pattern:auto;
	white-space:nowrap;}
.xl6332219
	{padding-top:1px;
	padding-right:1px;
	padding-left:1px;
	mso-ignore:padding;
	color:black;
	font-size:12.0pt;
	font-weight:400;
	font-style:normal;
	text-decoration:none;
	font-family:Calibri, sans-serif;
	mso-font-charset:0;
	mso-number-format:General;
	text-align:general;
	vertical-align:bottom;
	mso-background-source:auto;
	mso-pattern:auto;
	white-space:nowrap;}
.xl6432219
	{padding-top:1px;
	padding-right:1px;
	padding-left:1px;
	mso-ignore:padding;
	color:black;
	font-size:12.0pt;
	font-weight:700;
	font-style:normal;
	text-decoration:none;
	font-family:Calibri, sans-serif;
	mso-font-charset:0;
	mso-number-format:General;
	text-align:center;
	vertical-align:middle;
	border:.5pt solid windowtext;
	background:#C2D69A;
	mso-pattern:black none;
	white-space:normal;}
.xl6532219
	{padding-top:1px;
	padding-right:1px;
	padding-left:1px;
	mso-ignore:padding;
	color:black;
	font-size:9.0pt;
	font-weight:400;
	font-style:normal;
	text-decoration:none;
	font-family:Calibri, sans-serif;
	mso-font-charset:0;
	mso-number-format:General;
	text-align:center;
	vertical-align:middle;
	border:.5pt solid windowtext;
	background:#EAF1DD;
	mso-pattern:black none;
	white-space:normal;}
.xl6632219
	{padding-top:1px;
	padding-right:1px;
	padding-left:1px;
	mso-ignore:padding;
	color:black;
	font-size:9.0pt;
	font-weight:400;
	font-style:normal;
	text-decoration:none;
	font-family:Calibri, sans-serif;
	mso-font-charset:0;
	mso-number-format:General;
	text-align:center;
	vertical-align:middle;
	border:.5pt solid windowtext;
	background:#EAF1DD;
	mso-pattern:black none;
	white-space:nowrap;}
.xl6732219
	{padding-top:1px;
	padding-right:1px;
	padding-left:1px;
	mso-ignore:padding;
	color:black;
	font-size:9.0pt;
	font-weight:400;
	font-style:normal;
	text-decoration:none;
	font-family:Calibri, sans-serif;
	mso-font-charset:0;
	mso-number-format:General;
	text-align:center;
	vertical-align:bottom;
	border:.5pt solid windowtext;
	background:#EAF1DD;
	mso-pattern:black none;
	white-space:nowrap;}
.xl6832219
	{padding-top:1px;
	padding-right:1px;
	padding-left:1px;
	mso-ignore:padding;
	color:black;
	font-size:9.0pt;
	font-weight:400;
	font-style:normal;
	text-decoration:none;
	font-family:Calibri, sans-serif;
	mso-font-charset:0;
	mso-number-format:General;
	text-align:center;
	vertical-align:bottom;
	border:.5pt solid windowtext;
	background:#EAF1DD;
	mso-pattern:black none;
	white-space:normal;}
--></style>
</head>

<body>
<!--[if !excel]>&nbsp;&nbsp;<![endif]-->
<!--The following information was generated by Microsoft Office Excel's Publish
as Web Page wizard.-->
<!--If the same item is republished from Excel, all information between the DIV
tags will be replaced.-->
<!----------------------------->
<!--START OF OUTPUT FROM EXCEL PUBLISH AS WEB PAGE WIZARD -->
<!----------------------------->

<div id="ParserDataElementDictionary_32219" align=center x:publishsource="Excel">


<table border=0 cellpadding=0 cellspacing=0 width=923 style='border-collapse:
 collapse;table-layout:fixed;width:694pt'>
 <col width=134 style='mso-width-source:userset;mso-width-alt:4900;width:101pt'>
 <col width=45 style='mso-width-source:userset;mso-width-alt:1645;width:34pt'>
 <col width=158 style='mso-width-source:userset;mso-width-alt:5778;width:119pt'>
 <col width=241 style='mso-width-source:userset;mso-width-alt:8813;width:181pt'>
 <col width=192 style='mso-width-source:userset;mso-width-alt:7021;width:144pt'>
 <col width=153 style='mso-width-source:userset;mso-width-alt:5595;width:115pt'>
 <tr class=xl6332219 height=21 style='height:15.75pt'>
  <td height=21 class=xl6432219 width=134 style='height:15.75pt;width:101pt'>Variable
  Name</td>
  <td class=xl6432219 width=45 style='border-left:none;width:34pt'>Class</td>
  <td class=xl6432219 width=158 style='border-left:none;width:119pt'>Function</td>
  <td class=xl6432219 width=241 style='border-left:none;width:181pt'>Purpose</td>
  <td class=xl6432219 width=192 style='border-left:none;width:144pt'>Data Type</td>
  <td class=xl6432219 width=153 style='border-left:none;width:115pt'>Range</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>InputString</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>removeWhiteSpace</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>to be returned to caller void of all white space characters or
  tabs</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>any string in the code being read</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>instruction</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>returnSymbolInstruction</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>carries line of code from which a possible symbol is to be
  retrieved</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>list of all possible instruction in SAL560</td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 class=xl6532219 width=134 style='height:15.0pt;border-top:none;
  width:101pt'>symbolObj</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>returnSymbolInstruction</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>carries an instruction, directive or null back to caller</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>object</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>all possible symbols and null</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>st</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>returnSymbolInstruction</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>parses string of code passed to function by tab inorder to
  determine presence and type of symbol</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>StringTokenizer</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>all tokens extracted from codeline after parsing by &quot;
  \t&quot;</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>comandMinusSymbol</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>returnSymbolInstruction</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Used to infer what type of symbol first token from string of
  code is<span style='mso-spacerun:yes'> </span></td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>all lines of code in the source code excluding their first
  tokens</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>instructionWithOperands</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>returnInstruction</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>passes into function the line of code from which an instruction
  is to be extracted</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>all lines of code that may carry an instruction</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl6532219 width=134 style='height:36.0pt;border-top:none;
  width:101pt'>instuctionObj</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>returnInstruction</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>either returns null if no instruction is present or returns the
  instruction together with its operands, operand types, hexvalue, ext hex,
  binary and ext binary values.</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>Instruction</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>all possible instructions of SAL560 along with their associated
  operand numbers and types</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>st</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>returnInstruction</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>parses string of code passed to function by tab inorder to
  determine presence and type of symbol</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>StringTokenizer</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>all tokens extracted from codeline after parsing by &quot;
  \t&quot;</td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 class=xl6532219 width=134 style='height:15.0pt;border-top:none;
  width:101pt'>instruction</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>returnInstruction</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>carries first token of code line which may be an instruction</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>all possible instructions of SAL560<span
  style='mso-spacerun:yes'> </span></td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>operandString</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>returnInstruction</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>carries line of code minus extracted instruction<span
  style='mso-spacerun:yes'> </span></td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>remaining strings of code after instruction is extracted</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>operands</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>returnInstruction</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>splits the line of code minus instruction by its commas i.e.
  loads the operands of line of code into a string array</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String []</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>any string array that carries possible operands for instruction
  in the SAL560</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl6532219 width=134 style='height:36.0pt;border-top:none;
  width:101pt'>stringArray</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>joinStringArray</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>carries the strings that are to be concatenated with the
  delimeter between them</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String []</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any sequence of Strings that needs concatenation with a certain
  separating delimeter</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl6532219 width=134 style='height:36.0pt;border-top:none;
  width:101pt'>delimiter</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>joinStringArray</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>holds the separating string between the strings to be joined</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>any string we want to serve as seperation between an array of
  other strings</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>x</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>joinStringArray</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>serves as a counter in the loop wherein a string of array is
  concatenated with a separating delimeter</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>int</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>0&lt;x&lt;=stringArray.length</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl6532219 width=134 style='height:36.0pt;border-top:none;
  width:101pt'>totalString</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>joinStringArray</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>holds the elements of a string array separated by a specified
  delimeter</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>any string that is the combination of an array of strings
  separated by a common delimeter</td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 class=xl6532219 width=134 style='height:15.0pt;border-top:none;
  width:101pt'>fileName</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>readFileToArrayList</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>contains name of file to be read from</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>any acceptable name for a file</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>linesOfCode</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>readFileToArrayList</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>carries the lines read from the input file; each line is stored
  in a separate position in the array.</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>ArrayList&lt;String&gt;</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>any ArrayList containing strings read from an input file</td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 class=xl6532219 width=134 style='height:15.0pt;border-top:none;
  width:101pt'>fileInputStream</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>readFileToArrayList</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>used for reading streams of raw bytes from our input file</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>FileInputStream</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>any FileInputStream type</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl6532219 width=134 style='height:36.0pt;border-top:none;
  width:101pt'>dataInputStream</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>readFileToArrayList</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>A data input stream lets an application read primitive Java data
  types from an underlying input stream in a machine-independent way</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>DataInputStream</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>any DataInputStream type</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl6532219 width=134 style='height:36.0pt;border-top:none;
  width:101pt'>buffer</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>readFileToArrayList</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Reads text from a character-input stream, buffering characters
  so as to provide for the efficient reading of characters, arrays, and lines.</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>BufferReader</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>any BufferReader type</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>lineOfCode</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>readFileToArrayList</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>holds the individual lines as they are being read from the input
  file and passed into the array of linesOfCode</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>any line of code read from the input file</td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 class=xl6532219 width=134 style='height:15.0pt;border-top:none;
  width:101pt'>fileName</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>fillInstructionsArray</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>contains name of file that holds instruction names</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>any acceptable name for a file</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl6532219 width=134 style='height:36.0pt;border-top:none;
  width:101pt'>linesOfInstruction</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>fillInstructionsArray</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>carries the lines read from the instruction file; each line is
  stored in a separate position in the array.</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>ArrayList&lt;String&gt;</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>any array carrying the contents of the instruction file, each
  line in a separate position</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>lineOfInstruction</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>fillInstructionsArray</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>carries the line of instruction to be analysize to see what type
  of instuction and how many operands it has</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>any line read from the Instruction file</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl6532219 width=134 style='height:36.0pt;border-top:none;
  width:101pt'>variables</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>fillInstructionsArray</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>holds the pieces of the line of instruction data after having
  been split by &quot; \t&quot;, each piece in a separate position in the
  String array, provides easy access to lines components</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String []</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>line in instructions file segmented by &quot;\t&quot; and loaded
  into a String array.</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>instructionType</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>fillInstructionsArray</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>holds the type of instruction that is read from the instruction
  file.</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>Instruction.instructionTypes</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>&quot;IMMEDIATE&quot;, &quot;REGISTER&quot; OR
  &quot;SIGNED&quot;</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl6532219 width=134 style='height:36.0pt;border-top:none;
  width:101pt'>operands</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>fillInstructionsArray</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>splits the operands section of the line of code by &quot;,&quot;
  i.e. loads the operands into a String array to be accessed later inorder to
  determine their type</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String []</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>REG, IMM, BIT, BITS, ADDR loaded into a String array</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>operandArray</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>fillInstructionsArray</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>holds the operands extracted from the instruction file</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>ArrayList&lt;Instruction.operandTypes&gt;</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>REGISTER, IMMEDIATE, BIT, BITS, ADDRESS Loaded into an Array
  list</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl6532219 width=134 style='height:36.0pt;border-top:none;
  width:101pt'>instruction</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>fillInstructionsArray</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>holds each instruction extracted from the instruction file
  together with its hex value, extended hex value, operand values and
  instruction types</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>Instruction</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>all possible instruction in the SAL560 along with its associated
  data</td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 class=xl6532219 width=134 style='height:15.0pt;border-top:none;
  width:101pt'>fileName</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>fillErrorArray</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>contains name of file that holds error lines</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>any acceptable name for a file</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl6532219 width=134 style='height:36.0pt;border-top:none;
  width:101pt'>linesOfError</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>fillErrorArray</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>an ArrayList that carries the lines read from the error file,
  each line is stored in a separate position in the ArrayList</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>ArrayList&lt;String&gt;</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>any array carrying the contents of the error file, each line in
  a separate position of the array</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>lineOfError</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>fillErrorArray</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>carries an individual line read from the error file to be
  analyzed and possibly added to our list of errors</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>any String in the linesOfError array</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl6532219 width=134 style='height:36.0pt;border-top:none;
  width:101pt'>variables</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>fillErrorArray</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>holds portions of lineOfError that is split based on the
  &quot;\t&quot; character, loaded into an array of String</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String []</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>any String containing the contents of line in the error file
  split by the &quot;\t&quot; character</td>
 </tr>
 <tr height=64 style='height:48.0pt'>
  <td height=64 class=xl6532219 width=134 style='height:48.0pt;border-top:none;
  width:101pt'>error</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>fillErrorArray</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>creates an error object based on the information extracted from
  a particular line in the error file.</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>Error</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>any object containing a number representing the number of the
  error and a string that holds the message to be printed when the error occurs</td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 class=xl6532219 width=134 style='height:15.0pt;border-top:none;
  width:101pt'>ErrorId</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>returnError</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Used to identify the error to be returned<span
  style='mso-spacerun:yes'> </span></td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>int</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>0&lt;=ErrorId&lt;ErrorArray.length</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl6532219 width=134 style='height:36.0pt;border-top:none;
  width:101pt'>returnError</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>returnError</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>An Error object from ErrorArray with an error number that is
  equal to ErrorId, which is returned to caller of function returnError.</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>Error</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any Error in the ErrorArray</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl6532219 width=134 style='height:36.0pt;border-top:none;
  width:101pt'>error</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>returnError</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Used to search through the ErrorArray for an Error with a
  matching number as<span style='mso-spacerun:yes'>  </span>ErrorId at which
  point Error is set to returnError.</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>Error</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any Error in the ErrorArray</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>instructionString</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>instructionExists</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>String that is to be checked to see whether it is an instruction
  or not.</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any String that needs to be check for instructions</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>instructionExists</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>instructionExists</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Tells us whether a string contains an instruction
  (instructionExists=true) or doesnt (instructionExists = false).</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>Boolean</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>True or False</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>instruction</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>instructionExists</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Used to search through the InstructionArray to see whether the
  String of code passed is an instruction .</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>Instruction</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any instruction in the instructionArray</td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 class=xl6532219 width=134 style='height:15.0pt;border-top:none;
  width:101pt'>instructionString</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>returnInstructionViaOpcode</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Used to search for an instruction object to be returned.</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any instruction in the instructionArray</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>instruction</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>returnInstructionViaOpcode</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Used to search through the InstructionArray to see whether the
  String passed matches an instruction in the instruction array.</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>Instruction</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any instruction in the instructionArray</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>returnInstruction</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>returnInstructionViaOpcode</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Used to return the instruction object that has a name that is
  equal to the instructionString that was passed into the function.</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>Instruction</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any instruction object with a name that is in the
  instructionArray.</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>operandString</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>isRegister</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>is the string that we are checking to see if it is a register or
  not.</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any string that we want to check if its a register</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>isRegister</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>isRegister</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>tells us whether the String we passed in represents a register
  or not.</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>Boolean</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>True or False</td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 class=xl6532219 width=134 style='height:15.0pt;border-top:none;
  width:101pt'>registerNumber</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>isRegister</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>represents the number of the register.</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>int</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>0&lt;=registerNumber&lt;8</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>operandString</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>isLiteral</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>String to be check if its a literal.</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any String that we want to check to see if it represents a
  literal or not</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl6532219 width=134 style='height:36.0pt;border-top:none;
  width:101pt'>isLiteral</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>isLiteral</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Boolean to tell us if the parameter passed is a literal
  (isLiteral = true) or not (isLiteral = false), this boolean is then returned
  to the caller.</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>Boolean</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>True or False</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>fileName</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>fillDirectivesArray</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Contains the name of the file that we want to extract directives
  from.</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>any acceptable name for a file</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl6532219 width=134 style='height:36.0pt;border-top:none;
  width:101pt'>linesOfInstruction</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>fillDirectivesArray</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Contains the lines of instruction read from the Directives file.
  These lines are stored in an ArrayList with each line in a separate position
  in the Array.</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>ArrayList&lt;String&gt;</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any arraylist containing the lines of instruction read from the
  directives file.</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>lineOfInstruction</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>fillDirectivesArray</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Used to go through the &quot;linesOfInstuction&quot; array and
  analyze each line.</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any line in the &quot;linesOfInstruction&quot; array list.</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl6532219 width=134 style='height:36.0pt;border-top:none;
  width:101pt'>variables</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>fillDirectivesArray</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>An array resulting from splitting a line of instruction read
  from the directives file by &quot;\t&quot;. This array is then used to
  analyze the various components of each line.</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String[]</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any array containing an instruction line from the directives
  file without the &quot;\t&quot; character</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>codeLocation</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>fillDirectivesArray</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Stores the code location of the directive extracted from the
  line of instruction read from the directives file.</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>Directive.codeLocation</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>DATA, TEXT, INFO, START, END,<span
  style='mso-spacerun:yes'> </span></td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>labelType</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>fillDirectivesArray</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Stores the labelType of the directive extracted from the line of
  instruction read from the directives file.</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>Directive.labelTypes</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>OPTIONALLABEL, REQUIREDLABEL, NOLABEL</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl6532219 width=134 style='height:36.0pt;border-top:none;
  width:101pt'>operands</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>fillDirectivesArray</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>holds the operands in the read directive. Obtained by splitting
  string of operands by comma and loading parts into the String array.</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String[]</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>An array of BIN, HEX, STR, LABEL, NUM.</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>operandArray</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>fillDirectivesArray</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Holds the name of the operands found in the directives' line of
  instructions.</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>ArrayList&lt;Directive.operandTypes&gt;</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>An array of BINARY, HEX, STRING, LABEL, NUMBER.</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>operand</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>fillDirectivesArray</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Used to go through the &quot;operands&quot; array and the full
  word of each type to the &quot;operandArray&quot;.</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Can be any of BIN, HEX, STR, LABEL or NUM.</td>
 </tr>
 <tr height=64 style='height:48.0pt'>
  <td height=64 class=xl6532219 width=134 style='height:48.0pt;border-top:none;
  width:101pt'>directive</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>fillDirectivesArray</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>The result of a directive object construction using the
  information gathered from the line of directive gathered from the directives
  file. This object is then added to the DirectivesArray.</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>Directive</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any valid directive in the SAL560.</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>directiveObj</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>returnDirective</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>This variable is assigned a new Directive object so that it can
  be returned with its Directive objects filled.</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>Directive</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any valid Directive object</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>st</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>returnDirective</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>This variable is a string tokenizer that removes the tokens from
  the code string object</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>StringTokenizer</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Valid StringObject</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>codeString</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>returnDirective</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>This variable is a parameter in the returnDirective that is a
  single line string that contains one line of code.</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>One line of text with any characters except the new line
  character</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl6532219 width=134 style='height:36.0pt;border-top:none;
  width:101pt'>addErrors</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>returnDirective</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>This variable is a parameter in the returnDirective that is
  holds a boolean value that determines if Errors are to be added or not to the
  currentErrorArray object.</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>Boolean</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>True or False</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>possibleDirective</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>returnDirective</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Holds the first token from the StringTokenizer of the codeString
  object</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any string without whitespace.</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>directive</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>returnDirective</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Holds a temporary Directive object that goes through evey object
  in the DirectivesArray</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>Directive</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any valid Directive Object</td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 class=xl6532219 width=134 style='height:15.0pt;border-top:none;
  width:101pt'>operandString</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>returnDirective</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>This hold a concatenated string of the operands</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any String</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>operands</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>returnDirective</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>This holds a String Array with each operand as a separate string
  in the array</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String[]</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any String, with up to four strings.</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>x</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>returnDirective</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Holds a temporary number value for the for statement when
  looping through the operands String array.</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>int</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any Integer</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>specialDirectives</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>returnDirective</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Holds a String Array that contains the possible directive split
  by a comma.<span style='mso-spacerun:yes'> </span></td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String[]</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any String</td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 class=xl6532219 width=134 style='height:15.0pt;border-top:none;
  width:101pt'>addValues</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>addToPC</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Holds a number value that is added to the PC</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>int</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any Integer below or equal to 65536</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>cl</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>checkSymbolsAndSpecialDirectives</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Holds a CodeLine object that is used to check the directives and
  symbols.</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>CodeLine</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any CodeLine Object</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>args</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>main</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Holds the input arguments that are used to start the program</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String[]</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>any string array that carries possible operands for instruction
  in the SAL560</td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 class=xl6532219 width=134 style='height:15.0pt;border-top:none;
  width:101pt'>linesOfCode</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>main</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Holds the String Array of the input files contents</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String[]</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any String Array</td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 class=xl6532219 width=134 style='height:15.0pt;border-top:none;
  width:101pt'>lineOfCode</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>main</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Holds a temporary line of code from the input file</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any possible String<span style='mso-spacerun:yes'> </span></td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 class=xl6532219 width=134 style='height:15.0pt;border-top:none;
  width:101pt'>execStart</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6532219 width=158 style='border-top:none;border-left:none;
  width:119pt'>&nbsp;</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Holds the int starting position of the execStart</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>Integer</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any Integer below or equal to 65536</td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 class=xl6532219 width=134 style='height:15.0pt;border-top:none;
  width:101pt'>PC</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6632219 style='border-top:none;border-left:none'>&nbsp;</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Holds the counter of the current memory location in the code</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>Integer</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any Integer below or equal to 65536</td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 class=xl6532219 width=134 style='height:15.0pt;border-top:none;
  width:101pt'>maxPC</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6632219 style='border-top:none;border-left:none'>&nbsp;</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Holds the maximum PC number possible</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>Integer</td>
  <td class=xl6632219 style='border-top:none;border-left:none'>65536</td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 class=xl6532219 width=134 style='height:15.0pt;border-top:none;
  width:101pt'>currentErrorArray</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6632219 style='border-top:none;border-left:none'>&nbsp;</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Holds the current CodeLine's Errors in an ArrayList&lt;Error&gt;</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>ArrayList&lt;Error&gt;</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any Error in the ErrorArray</td>
 </tr>
 <tr height=64 style='height:48.0pt'>
  <td height=64 class=xl6532219 width=134 style='height:48.0pt;border-top:none;
  width:101pt'>SymbTable</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6632219 style='border-top:none;border-left:none'>&nbsp;</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Holds all the symbols of the symbol table</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>SymbolTable</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>An Object formated with Three String with any value and an Enum
  with the possible values of DATA_LABEL, PROGRAM_NAME, EXTERNAL, EQU</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>ErrorArray</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6632219 style='border-top:none;border-left:none'>&nbsp;</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Holds all the Errors in the Error text file via an ArrayList of
  Error</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>ArrayList&lt;Error&gt;</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any possible Error Object, as many times as possible</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>InstructionsArray</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6632219 style='border-top:none;border-left:none'>&nbsp;</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Holds all the instructions that are in the text file via an
  ArrayList of Instruction</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>ArrayList&lt;Instruction&gt;</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any possible Instruction object as many times as possible</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>DirectivesArray</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6632219 style='border-top:none;border-left:none'>&nbsp;</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Holds all the directives that are in the directives text file
  via an ArrayList of Directive</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>ArrayList&lt;Directive&gt;</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any possible Directive object as many times as possible</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>CodeLineArray</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6632219 style='border-top:none;border-left:none'>&nbsp;</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Holds all the code line objects that are created</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>ArrayList&lt;CodeLine&gt;</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any possible CodeLine Object as many times as possible</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl6532219 width=134 style='height:36.0pt;border-top:none;
  width:101pt'>codeLocation</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6632219 style='border-top:none;border-left:none'>&nbsp;</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Holds the current code location in a codeLocations Enum</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>Directive.codeLocations</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any possible object in the CodeLocation Enum: START, END, DATA,
  TEXT, INFO</td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 class=xl6532219 width=134 style='height:15.0pt;border-top:none;
  width:101pt'>endProgram</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6632219 style='border-top:none;border-left:none'>&nbsp;</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Holds the boolean value if the program has ended</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>Boolean</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>True or False</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>programName</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6632219 style='border-top:none;border-left:none'>&nbsp;</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Holds the Program Name</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>String</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any Valid Program Name in the SAL 560 Program Language</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl6532219 width=134 style='height:24.0pt;border-top:none;
  width:101pt'>startingLocation</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6632219 style='border-top:none;border-left:none'>&nbsp;</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Holds the location of the starting location in memory for the
  program</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>Integer</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any Integer below or equal to 65536</td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 class=xl6532219 width=134 style='height:15.0pt;border-top:none;
  width:101pt'>litTable</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6632219 style='border-top:none;border-left:none'>&nbsp;</td>
  <td class=xl6532219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Holds all the literals used in the program being assembled</td>
  <td class=xl6532219 width=192 style='border-top:none;border-left:none;
  width:144pt'>LiteralTable</td>
  <td class=xl6532219 width=153 style='border-top:none;border-left:none;
  width:115pt'>Any valid Literal Table Object.</td>
 </tr>
 <tr height=49 style='height:36.75pt'>
  <td height=49 class=xl6532219 width=134 style='height:36.75pt;border-top:
  none;width:101pt'>op1</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6732219 style='border-top:none;border-left:none'>evaluateExpression</td>
  <td class=xl6832219 width=241 style='border-top:none;border-left:none;
  width:181pt'>1st Operand in the expression being evaluated.</td>
  <td class=xl6732219 style='border-top:none;border-left:none'>String</td>
  <td class=xl6832219 width=153 style='border-top:none;border-left:none;
  width:115pt'>String representation of any Integer &lt;= 65536 or any
  previously equated label representing an integer &lt;= 65536</td>
 </tr>
 <tr height=49 style='height:36.75pt'>
  <td height=49 class=xl6532219 width=134 style='height:36.75pt;border-top:
  none;width:101pt'>op2</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6732219 style='border-top:none;border-left:none'>evaluateExpression</td>
  <td class=xl6832219 width=241 style='border-top:none;border-left:none;
  width:181pt'>2nd Operand in the expression being evaluated.</td>
  <td class=xl6732219 style='border-top:none;border-left:none'>String</td>
  <td class=xl6832219 width=153 style='border-top:none;border-left:none;
  width:115pt'>String representation of any Integer &lt;= 65536 or any
  previously equated label representing an integer &lt;= 65536</td>
 </tr>
 <tr height=49 style='height:36.75pt'>
  <td height=49 class=xl6532219 width=134 style='height:36.75pt;border-top:
  none;width:101pt'>op3</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6732219 style='border-top:none;border-left:none'>evaluateExpression</td>
  <td class=xl6832219 width=241 style='border-top:none;border-left:none;
  width:181pt'>3rd Operand in the expression being evaluated.</td>
  <td class=xl6732219 style='border-top:none;border-left:none'>String</td>
  <td class=xl6832219 width=153 style='border-top:none;border-left:none;
  width:115pt'>String representation of any Integer &lt;= 65536 or any
  previously equated label representing an integer &lt;= 65536</td>
 </tr>
 <tr height=49 style='height:36.75pt'>
  <td height=49 class=xl6532219 width=134 style='height:36.75pt;border-top:
  none;width:101pt'>op4</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6732219 style='border-top:none;border-left:none'>evaluateExpression</td>
  <td class=xl6832219 width=241 style='border-top:none;border-left:none;
  width:181pt'>4th Operand in the expression being evaluated.</td>
  <td class=xl6732219 style='border-top:none;border-left:none'>String</td>
  <td class=xl6832219 width=153 style='border-top:none;border-left:none;
  width:115pt'>String representation of any Integer &lt;= 65536 or any
  previously equated label representing an integer &lt;= 65536</td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 class=xl6532219 width=134 style='height:15.0pt;border-top:none;
  width:101pt'>symb1</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6732219 style='border-top:none;border-left:none'>evaluateExpression</td>
  <td class=xl6832219 width=241 style='border-top:none;border-left:none;
  width:181pt'>1st Symbol in the expression being evaluated.</td>
  <td class=xl6732219 style='border-top:none;border-left:none'>String</td>
  <td class=xl6732219 style='border-top:none;border-left:none'>&quot;+&quot; or
  &quot;-&quot; or &quot;*&quot;</td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 class=xl6532219 width=134 style='height:15.0pt;border-top:none;
  width:101pt'>symb2</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6732219 style='border-top:none;border-left:none'>evaluateExpression</td>
  <td class=xl6832219 width=241 style='border-top:none;border-left:none;
  width:181pt'>2nd Symbol in the expression being evaluated.</td>
  <td class=xl6732219 style='border-top:none;border-left:none'>String</td>
  <td class=xl6732219 style='border-top:none;border-left:none'>&quot;+&quot; or
  &quot;-&quot; or &quot;*&quot;</td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 class=xl6532219 width=134 style='height:15.0pt;border-top:none;
  width:101pt'>symb3</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6732219 style='border-top:none;border-left:none'>evaluateExpression</td>
  <td class=xl6832219 width=241 style='border-top:none;border-left:none;
  width:181pt'>3rd Symbol in the expression being evaluated.</td>
  <td class=xl6732219 style='border-top:none;border-left:none'>String</td>
  <td class=xl6732219 style='border-top:none;border-left:none'>&quot;+&quot; or
  &quot;-&quot; or &quot;*&quot;</td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 class=xl6532219 width=134 style='height:15.0pt;border-top:none;
  width:101pt'>result</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6732219 style='border-top:none;border-left:none'>evaluateExpression</td>
  <td class=xl6832219 width=241 style='border-top:none;border-left:none;
  width:181pt'>Integer result of the evaluated expression</td>
  <td class=xl6732219 style='border-top:none;border-left:none'>int</td>
  <td class=xl6732219 style='border-top:none;border-left:none'>Any integer
  &lt;= 65536</td>
 </tr>
 <tr height=49 style='height:36.75pt'>
  <td height=49 class=xl6532219 width=134 style='height:36.75pt;border-top:
  none;width:101pt'>expressionTokenizer</td>
  <td class=xl6532219 width=45 style='border-top:none;border-left:none;
  width:34pt'>Parser</td>
  <td class=xl6732219 style='border-top:none;border-left:none'>evaluateExpression</td>
  <td class=xl6832219 width=241 style='border-top:none;border-left:none;
  width:181pt'>String tokenizer for expression based on &quot;+&quot; or
  &quot;-&quot;</td>
  <td class=xl6732219 style='border-top:none;border-left:none'>StringTokenizer</td>
  <td class=xl6832219 width=153 style='border-top:none;border-left:none;
  width:115pt'>All tokens of the expression including the operands the the
  operation symbols.</td>
 </tr>
 <![if supportMisalignedColumns]>
 <tr height=0 style='display:none'>
  <td width=134 style='width:101pt'></td>
  <td width=45 style='width:34pt'></td>
  <td width=158 style='width:119pt'></td>
  <td width=241 style='width:181pt'></td>
  <td width=192 style='width:144pt'></td>
  <td width=153 style='width:115pt'></td>
 </tr>
 <![endif]>
</table>

</div>


<!----------------------------->
<!--END OF OUTPUT FROM EXCEL PUBLISH AS WEB PAGE WIZARD-->
<!----------------------------->
</body>

</html>

